AWSTemplateFormatVersion: '2010-09-09'
Description: 'SmartHouse IoT Infrastructure'

Parameters:
  ProjectName:
    Type: String
    Default: SmartHouse
    Description: Name prefix for IoT resources

Resources:
  # IoT Policy for device access
  SmartHouseIoTPolicy:
    Type: AWS::IoT::Policy
    Properties:
      PolicyName: !Sub '${ProjectName}-device-policy'
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - 'iot:Connect'
              - 'iot:Publish'
            Resource: 
              - !Sub 'arn:aws:iot:${AWS::Region}:${AWS::AccountId}:client/${ProjectName}-*'
              - !Sub 'arn:aws:iot:${AWS::Region}:${AWS::AccountId}:topic/smarthouse/sensors'

  # IoT Thing for your ESP32 gateway
  SmartHouseGateway:
    Type: AWS::IoT::Thing
    Properties:
      ThingName: !Sub '${ProjectName}-gateway'
      AttributePayload:
        Attributes:
          device_type: 'gateway'
          location: 'home'

  # IoT Certificate for secure connection
  SmartHouseCertificate:
    Type: AWS::IoT::Certificate
    Properties:
      CertificateSigningRequest: ''  # Auto-generate certificate
      Status: ACTIVE
      CertificateMode: DEFAULT

  # Attach policy to certificate
  SmartHousePolicyAttachment:
    Type: AWS::IoT::PolicyPrincipalAttachment
    Properties:
      PolicyName: !Ref SmartHouseIoTPolicy
      Principal: !GetAtt SmartHouseCertificate.Arn

  # Attach certificate to thing
  SmartHouseThingAttachment:
    Type: AWS::IoT::ThingPrincipalAttachment
    Properties:
      ThingName: !Ref SmartHouseGateway
      Principal: !GetAtt SmartHouseCertificate.Arn

  # IoT Rule to process incoming data
  SmartHouseRule:
    Type: AWS::IoT::TopicRule
    Properties:
      RuleName: !Sub '${ProjectName}_process_sensor_data'
      TopicRulePayload:
        Description: 'Process sensor data from SmartHouse'
        Sql: "SELECT deviceId, location, humidity, temperature, battery, rssi, timestamp FROM 'smarthouse/sensors'"
        Actions:
          - DynamoDB:
              TableName: !Ref SmartHouseSensorTable
              RoleArn: !GetAtt SmartHouseIoTRole.Arn
              HashKeyField: 'deviceId'
              HashKeyValue: '${deviceId}'
              RangeKeyField: 'timestamp'
              RangeKeyValue: '${timestamp}'

  # DynamoDB table to store sensor data
  SmartHouseSensorTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub '${ProjectName}-sensor-data'
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: deviceId
          AttributeType: S
        - AttributeName: timestamp
          AttributeType: N
      KeySchema:
        - AttributeName: deviceId
          KeyType: HASH
        - AttributeName: timestamp
          KeyType: RANGE

  # IAM Role for IoT to access DynamoDB
  SmartHouseIoTRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: iot.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: !Sub '${ProjectName}-iot-dynamodb-access'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'dynamodb:PutItem'
                Resource: !GetAtt SmartHouseSensorTable.Arn

Outputs:
  ThingName:
    Description: 'IoT Thing Name'
    Value: !Ref SmartHouseGateway
  
  CertificateId:
    Description: 'Certificate ID'
    Value: !Ref SmartHouseCertificate
  
  CertificatePem:
    Description: 'Certificate PEM'
    Value: !GetAtt SmartHouseCertificate.CertificatePem
  
  CertificatePrivateKey:
    Description: 'Certificate Private Key (IMPORTANT: Save this securely)'
    Value: !GetAtt SmartHouseCertificate.KeyPair.PrivateKey
  
  IoTEndpoint:
    Description: 'IoT Endpoint'
    Value: !Sub '${AWS::AccountId}-ats.iot.${AWS::Region}.amazonaws.com'
